function encode(){
  let b = document.querySelector(".box").value;
  let c = document.querySelector("#output");
  let a0 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a1 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a2 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a3 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a4 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a5 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a6 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a7 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let a8 = Math.pow(Math.floor(Math.random() * Number.MAX_SAFE_INTEGER - 13694206660) + 13694206660, 2);
  let main = BigInt(a0 * a1 * a2 * a3 * a4 * a5 * a6 * a7 * a8 * (Math.floor(Math.random() * (Math.pow(10, 22) - Math.pow(10, 12))) + Math.pow(10, 12)));
  b = b.replace(/a/g, BigInt(28) * main);
  b = b.replace(/b/g, BigInt(27) * main);
  b = b.replace(/c/g, BigInt(3) * main);
  b = b.replace(/d/g, BigInt(4) * main);
  b = b.replace(/e/g, BigInt(5) * main);
  b = b.replace(/f/g, BigInt(6) * main);
  b = b.replace(/g/g, BigInt(7) * main);
  b = b.replace(/h/g, BigInt(8) * main);
  b = b.replace(/i/g, BigInt(9) * main);
  b = b.replace(/j/g, BigInt(10) * main);
  b = b.replace(/k/g, BigInt(11) * main);
  b = b.replace(/l/g, BigInt(12) * main);
  b = b.replace(/m/g, BigInt(13) * main);
  b = b.replace(/n/g, BigInt(14) * main);
  b = b.replace(/o/g, BigInt(15) * main);
  b = b.replace(/p/g, BigInt(16) * main);
  b = b.replace(/q/g, BigInt(17) * main);
  b = b.replace(/r/g, BigInt(18) * main);
  b = b.replace(/s/g, BigInt(19) * main);
  b = b.replace(/t/g, BigInt(20) * main);
  b = b.replace(/u/g, BigInt(21) * main);
  b = b.replace(/v/g, BigInt(22) * main);
  b = b.replace(/w/g, BigInt(23) * main);
  b = b.replace(/x/g, BigInt(24) * main);
  b = b.replace(/y/g, BigInt(25) * main);
  b = b.replace(/z/g, BigInt(26) * main);
  b = b.replace(/0/g, 'A');
  b = b.replace(/1/g, 'H');
  b = b.replace(/2/g, 'P');
  b = b.replace(/3/g, 'J');
  b = b.replace(/4/g, 'I');
  b = b.replace(/5/g, 'Y');
  b = b.replace(/6/g, 'X');
  b = b.replace(/7/g, 'Z');
  b = b.replace(/8/g, 'Q');
  b = b.replace(/9/g, 'D');
  c.innerHTML = "Key:" + main;
  c.innerHTML = c.innerHTML + "\n" + "Encryption value:" + b;
}
function decode(){
  let main = document.querySelector(".key").value;
  let mainBig = BigInt(main);
  let c = document.querySelector("#output");
  let x = document.querySelector(".box").value;
  x = x.replace(/A/g, '0');
  x = x.replace(/H/g, '1');
  x = x.replace(/P/g, '2');
  x = x.replace(/J/g, '3');
  x = x.replace(/I/g, '4');
  x = x.replace(/Y/g, '5');
  x = x.replace(/X/g, '6');
  x = x.replace(/Q/g, '8');
  x = x.replace(/D/g, '9');
  x = x.replace(/Z/g, '7');
  x = x.replace(new RegExp(`${mainBig * BigInt(28)}`, "g"), 'a');
  x = x.replace(new RegExp(`${mainBig * BigInt(27)}`, "g"), 'b');
  x = x.replace(new RegExp(`${mainBig * BigInt(3)}`, "g"), 'c');
  x = x.replace(new RegExp(`${mainBig * BigInt(4)}`, "g"), 'd');
  x = x.replace(new RegExp(`${mainBig * BigInt(5)}`, "g"), 'e');
  x = x.replace(new RegExp(`${mainBig * BigInt(6)}`, "g"), 'f');
  x = x.replace(new RegExp(`${mainBig * BigInt(7)}`, "g"), 'g');
  x = x.replace(new RegExp(`${mainBig * BigInt(8)}`, "g"), 'h');
  x = x.replace(new RegExp(`${mainBig * BigInt(9)}`, "g"), 'i');
  x = x.replace(new RegExp(`${mainBig * BigInt(10)}`, "g"), 'j');
  x = x.replace(new RegExp(`${mainBig * BigInt(11)}`, "g"), 'k');
  x = x.replace(new RegExp(`${mainBig * BigInt(12)}`, "g"), 'l');
  x = x.replace(new RegExp(`${mainBig * BigInt(13)}`, "g"), 'm');
  x = x.replace(new RegExp(`${mainBig * BigInt(14)}`, "g"), 'n');
  x = x.replace(new RegExp(`${mainBig * BigInt(15)}`, "g"), 'o');
  x = x.replace(new RegExp(`${mainBig * BigInt(16)}`, "g"), 'p');
  x = x.replace(new RegExp(`${mainBig * BigInt(17)}`, "g"), 'q');
  x = x.replace(new RegExp(`${mainBig * BigInt(18)}`, "g"), 'r');
  x = x.replace(new RegExp(`${mainBig * BigInt(19)}`, "g"), 's');
  x = x.replace(new RegExp(`${mainBig * BigInt(20)}`, "g"), 't');
  x = x.replace(new RegExp(`${mainBig * BigInt(21)}`, "g"), 'u');
  x = x.replace(new RegExp(`${mainBig * BigInt(22)}`, "g"), 'v');
  x = x.replace(new RegExp(`${mainBig * BigInt(23)}`, "g"), 'w');
  x = x.replace(new RegExp(`${mainBig * BigInt(24)}`, "g"), 'x');
  x = x.replace(new RegExp(`${mainBig * BigInt(25)}`, "g"), 'y');
  x = x.replace(new RegExp(`${mainBig * BigInt(26)}`, "g"), 'z');
  c.innerHTML = x;
}